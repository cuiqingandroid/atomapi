apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 27
    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 27
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }

}

dependencies {
    compileOnly files('libs/api.jar')
    compileOnly files('libs/api-sources.jar')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
}

apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

repositories {
    google()
    jcenter()
    mavenCentral()
}


def libname = 'atomapi'
def libdesc = 'custom xposed framework wrapper'
version = "lastest"
group = "com.tencent.am"

//生成源文件
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}
//生成文档
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    options.encoding "UTF-8"
    options.charSet 'UTF-8'
    options.author true
    options.version true
    failOnError false
}

//文档打包成jar
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
//拷贝javadoc文件
task copyDoc(type: Copy) {
    from "${buildDir}/docs/"
    into "docs"
}

//上传到jcenter所需要的源码文件
artifacts {
    archives javadocJar
    archives sourcesJar
}


// 配置maven库，生成POM.xml文件
install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging "aar"
                name libname
                artifactId "tencent"
                url "https://github.com/cuiqingandroid/atomapi"
                licenses {
                    license {
                        name libname
                        url "https://github.com/cuiqingandroid/atomapi"
                    }
                }
                developers {
                    developer {
                        id "cuiqing"
                        name "cuiqing"
                        email "cuiqing827@gmail.com"
                    }
                }
                scm {
                    connection "https://github.com/cuiqingandroid/atomapi.git"
                    developerConnection "https://github.com/cuiqingandroid/atomapi.git"
                    url "https://github.com/cuiqingandroid/atomapi"
                }
            }
        }
    }
}
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
    user = properties.getProperty("bintray.user")    //读取 local.properties 文件里面的 bintray.user
    key = properties.getProperty("bintray.apikey")
    configurations = ['archives']
    pkg {
        repo = "maven"      // mave仓库名字,可以不用这个名字
        name = "atomapi"    //发布到JCenter上的项目名字，必须填写
        desc = "atom xposed frameword with tencent package lib"    //项目描述
        websiteUrl = "https://github.com/cuiqingandroid/atomapi"
        vcsUrl = "https://github.com/cuiqingandroid/atomapi"
        licenses = ["Apache-2.0"]
        publish = true
    }
}
